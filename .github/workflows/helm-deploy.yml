name: Helm Deploy

on:
  push:
    branches:
      - staging
  workflow_dispatch:
    inputs:
      environment:
        description: 'prod'
        required: true
        default: 'prod'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure CLI Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        run: az aks get-credentials --resource-group rg-devops-cicd-${{ github.event.inputs.environment }} --name aks-devops-cicd-${{ github.event.inputs.environment }}

      - name: Create namespace
        run: kubectl create namespace devops-cicd --dry-run=client -o yaml | kubectl apply -f -

      - name: Create image pull secret
        run: |
          kubectl create secret docker-registry ghcr \
            --docker-server=ghcr.io \
            --docker-username=${{ secrets.TF_VAR_GITHUB_USERNAME }} \
            --docker-password=${{ secrets.TF_VAR_GITHUB_TOKEN }} \
            --namespace devops-cicd --dry-run=client -o yaml | kubectl apply -f -

      - name: Delete existing CSIDriver if present
        run: |
          kubectl delete csidriver secrets-store.csi.k8s.io --ignore-not-found

      - name: Install Secrets Store CSI Driver CRDs
        run: |
          kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/secrets-store-csi-driver/v1.4.0/deploy/crds/secrets-store.csi.x-k8s.io_secretproviderclasses.yaml
          kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/secrets-store-csi-driver/v1.4.0/deploy/crds/secrets-store.csi.x-k8s.io_secretproviderclasspodstatuses.yaml

      - name: Wait for SecretProviderClass CRD
        run: |
          kubectl wait --for=condition=Established --timeout=60s crd/secretproviderclasses.secrets-store.csi.x-k8s.io

      - name: Helm upgrade backend
        run: |
          helm upgrade --install backend ./helm/backend \
            --set imagePullSecrets[0].name=ghcr \
            --set keyvaultName=kv-devops-cicd-${{ github.event.inputs.environment }} \
            --set tenantId=$(az account show --query tenantId -o tsv) \
            --namespace devops-cicd --wait

      - name: Helm upgrade frontend
        run: |
          helm upgrade --install frontend ./helm/frontend

